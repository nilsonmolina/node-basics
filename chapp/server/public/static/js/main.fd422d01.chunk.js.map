{"version":3,"sources":["components/Welcome.js","components/Sidebar/User.js","components/Sidebar/UserList.js","components/Sidebar/Sidebar.js","components/Messages/Message.js","components/Messages/MessageList.js","components/Messages/CreateMessage.js","components/Messages/Messages.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","state","input","sessionStorage","username","inputHandler","e","_this","setState","target","value","submitHandler","preventDefault","props","tryLogin","react_default","a","createElement","className","this","loginErr","onSubmit","onChange","placeholder","type","minLength","maxLength","required","React","Component","User","name","UserList","users","length","map","u","Sidebar_User","key","id","Sidebar","htmlFor","Sidebar_UserList","Message","concat","message","socket","socketId","body","date","MessageList","messageList","scrollTop","scrollHeight","ref","messages","m","i","Messages_Message","CreateMessage","initialState","sendMessage","autoFocus","Messages","Messages_MessageList","Messages_CreateMessage","App","emit","_this2","socketio","connect","on","payload","loggedIn","disconnected","src_components_Welcome","Fragment","components_Sidebar_Sidebar","components_Messages_Messages","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd422d01.chunk.js","sourcesContent":["import React from 'react';\nimport './Welcome.css';\n\n\nclass Welcome extends React.Component {\n  state = {\n    input: sessionStorage.username || '',\n  };\n\n  inputHandler = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    this.props.tryLogin(this.state.input);\n  };\n\n  render() {\n    return (\n      <section className=\"Welcome\">\n        <div className=\"modal\">\n          <h2>ch<span>app.</span></h2>\n          { this.props.state.loginErr\n            ? <span className=\"error\">{this.props.state.loginErr}</span>\n            : null\n          }\n          <p>\n            Welcome to my chat app... chapp! <br/>\n            To begin, enter a username.\n          </p>\n          <form onSubmit={this.submitHandler}>\n            <input\n              onChange={this.inputHandler}\n              value={this.state.input}\n              className=\"username\"\n              placeholder=\"Username\"\n              type=\"text\"\n              minLength=\"2\"\n              maxLength=\"25\"\n              required\n            />\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Welcome;\n","import React from 'react';\n\nconst User = (props) => (\n  <div className=\"User\">\n    {props.name}\n  </div>\n);\n\nexport default User\n","import React from 'react';\nimport User from './User';\n\nconst UserList = (props) => (\n  <section className=\"UserList\">\n    <h3>Connected Users - ({props.users.length})</h3>\n    <div className=\"users\">\n      {props.users.map((u) => (\n        <User key={u.id} name={u.name} />\n      ))}\n    </div>\n  </section>\n);\n\nexport default UserList;\n","import React from 'react';\nimport UserList from './UserList';\nimport './Sidebar.css';\n\n\nconst Sidebar = (props) => (\n  <section className=\"Sidebar\">\n    <input type=\"checkbox\" id=\"sidebar-toggle\"/>\n\n    <label htmlFor=\"sidebar-toggle\" className=\"mobile-button\">\n      <div className=\"lines\"></div>\n      <div className=\"lines\"></div>\n      <div className=\"lines\"></div>\n    </label>\n\n    <div className=\"heading\">\n      <h2>ch<span>app.</span></h2>\n      <div className=\"subtitle\">A realtime chat application</div>\n    </div>\n    \n    <div className=\"sidebar-items\">\n      <UserList users={props.users} />\n    </div>\n  </section>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst Message = (props) => (\n  <div className={`Message ${props.message.socket === sessionStorage.socketId ? \"me\" : \"\" }`}>\n    <div className=\"bubble\">\n      <p>{props.message.body}</p>\n      \n      <div className=\"meta\">\n        <span className=\"name\">{props.message.name}</span>\n        <span className=\"date\">{props.message.date}</span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Message;","import React from 'react';\nimport Message from './Message';\n\nclass MessageList extends React.Component {\n  componentDidUpdate() {\n    this.messageList.scrollTop = this.messageList.scrollHeight;\n  }\n\n  render() {\n    return (\n      <div className=\"MessageList\" ref={e => this.messageList = e}>\n        { this.props.messages.map((m, i) => (\n          <Message key={i} message={m} />\n        ))}\n      </div>\n    );\n  };\n}\n\nexport default MessageList;\n","import React from 'react';\n\nclass CreateMessage extends React.Component {\n  static initialState = { message: '' };\n  state = CreateMessage.initialState;\n\n  inputHandler = (e) => {\n    this.setState({ message: e.target.value });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    this.props.sendMessage(this.state.message);\n    this.setState(CreateMessage.initialState);\n  };\n\n  render() {\n    return (\n      <div className=\"CreateMessage\">\n        <form onSubmit={this.submitHandler}>\n          <input \n            type=\"text\"\n            onChange={this.inputHandler}\n            placeholder=\"Enter message here...\"\n            value={this.state.message}\n            maxLength=\"2048\"\n            required\n            autoFocus\n          />\n        </form>\n      </div>\n    );\n  };\n}\n\nexport default CreateMessage;\n","import React from 'react';\nimport MessageList from './MessageList';\nimport CreateMessage from './CreateMessage';\nimport './Messages.css';\n\nconst Messages = (props) => (\n  <section className=\"Messages\">\n    <MessageList messages={props.messages} />\n    <CreateMessage sendMessage={props.sendMessage} />\n  </section>\n);\n\nexport default Messages;\n","import React, { Component } from 'react';\nimport socketio from 'socket.io-client';\nimport './App.css';\n\nimport Welcome from './components/Welcome';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Messages from './components/Messages/Messages';\n\nclass App extends Component {\n  static initialState = {\n    socket: false,\n    loggedIn: false,\n    loginErr: 'Server is offline',\n    username: '',\n    users: [],\n    messages: [],\n  };\n  state = App.initialState;\n\n  componentWillMount() {\n    const socket = socketio.connect('http://23.23.42.188:5000');\n\n    socket.on('connect', () => this.setState({ \n      socket,\n      loginErr: '',\n    }, () => sessionStorage.socketId = this.state.socket.id ));\n\n    // ----- LOGIN -----\n    socket.on('usernameAccepted', (payload) => this.setState({\n      loggedIn: true,\n      username: payload.username,\n      messages: payload.messages,\n    }, () => sessionStorage.username = this.state.username ));\n\n    socket.on('usersChanged', (users) => this.setState({ users }));\n\n    // ----- MESSAGES -----    \n    socket.on('messageCreated', (message) => this.setState((state) => ({ \n      messages: state.messages.concat(message),\n    })));\n\n    // ----- ERRORS -----\n    socket.on('usernameTaken', (payload) => this.setState({\n      loginErr: payload,\n    }));\n\n    socket.on('disconnect', () => this.setState(App.initialState));\n  };\n\n  tryLogin = (username) => {\n    this.state.socket.emit('tryUsername', username);\n  };\n\n  sendMessage = (message) => {\n    this.state.socket.emit('createMessage', message);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        { !this.state.loggedIn || this.state.socket.disconnected\n          ? <Welcome state={this.state} tryLogin={this.tryLogin} />\n          : (\n            <React.Fragment>\n              <Sidebar users={this.state.users} />\n              <Messages messages={this.state.messages} sendMessage={this.sendMessage} />  \n            </React.Fragment>\n          )\n        }\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}